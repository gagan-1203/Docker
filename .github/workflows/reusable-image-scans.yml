name: Reusable Container Image Security Scans

on:
  workflow_call:
    secrets:
      SNYK_TOKEN:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  scans:
    name: Trivy + Grype + Snyk Scans
    runs-on: ubuntu-latest
    env:
      IMAGE: ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}

    steps:
      # Log in to registry
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Pull the image that was just pushed
      - name: Pull Built Image
        run: docker pull "$IMAGE"

      # --- Trivy Scan ---
      - name: Trivy Image Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE }}
          format: sarif
          output: trivy-results.sarif
          scanners: vuln,misconfig,secret
          severity: CRITICAL,HIGH
          # Use "0" to avoid failing the workflow if vulnerabilities exist
          exit-code: "0"

      - name: Upload Trivy Results
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

      # --- Grype Scan ---
      - name: Grype Image Scan
        uses: anchore/scan-action@v3
        with:
          image: ${{ env.IMAGE }}
          fail-on-severity: high

      # --- Snyk Scan ---
      - name: Snyk Container Scan
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ env.IMAGE }}
          args: --severity-threshold=high --sarif-file-output=snyk.sarif

      - name: Upload Snyk Results
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif
